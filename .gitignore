# First, some general rules to prevent accidentally publishing private keys.
# Private keys can be in a number of different formats which may or may not 
# be accurately reflected by a file extension. Obviously the .gitignore can't
# do anything about the internal file formats and can't help us when the files
# don't have extensions, but we can at least try to some of them.
#
# See:
# https://superuser.com/questions/1515261/how-to-quickly-identify-ssh-private-key-file-formats
# https://coolaj86.com/articles/the-openssh-private-key-format/

## GPG key
secring.*

## DER format
*.cer
*.der

## PEM format
*.pem

## PKCS #7
*.spc
*.p7a
*.p7b
*.p7c

## PKCS #8
*.p8
*.p8e

## PuTTY private key
*.ppk

## sometimes informally used
*.pri
*.key

# ---------- OPENSSL ----------
# From: https://github.com/github/gitignore/blob/master/community/OpenSSL.gitignore
# OpenSSL-related files best not committed

## Certificate Authority
*.ca

## Certificate
*.crt

## Certificate Sign Request
*.csr

## Certificate
*.der

## Key database file
*.kdb

## OSCP request data
*.org

## PKCS #12
*.p12
*.pfx

## PEM-encoded certificate data
*.pem

## Random number seed
*.rnd

## SSLeay data
*.ssleay

## S/MIME message
*.smime

# ---------- PYTHON ----------
# https://github.com/github/gitignore/blob/master/Python.gitignore

## Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

## C extensions
*.so

## Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

## PyInstaller
##  Usually these files are written by a python script from a template
##  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

## Installer logs
pip-log.txt
pip-delete-this-directory.txt

## Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

## Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

## Flask stuff:
instance/
.webassets-cache

## Scrapy stuff:
.scrapy

## Sphinx documentation
docs/_build/

## PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

## pipenv
##   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
##   However, in case of collaboration, if having platform-specific dependencies or dependencies
##   having no cross-platform support, pipenv may install dependencies that don't work, or not
##   install all needed dependencies.
##Pipfile.lock

## PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

## Celery stuff
celerybeat-schedule
celerybeat.pid

## SageMath parsed files
*.sage.py

## Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

## Spyder project settings
.spyderproject
.spyproject

## Rope project settings
.ropeproject

## mkdocs documentation
/site

## mypy
.mypy_cache/
.dmypy.json
dmypy.json

## Pyre type checker
.pyre/

# ---------- VISUAL STUDIO CODE ----------
# From: https://github.com/github/gitignore/blob/master/Global/VisualStudioCode.gitignore

.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

## Local History for Visual Studio Code
.history/
